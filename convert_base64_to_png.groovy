import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
 
import javax.imageio.ImageIO;
 
import sun.misc.BASE64Decoder;

def base64String = "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";
 
BASE64Decoder decoder = new BASE64Decoder()
def decodedBytes = decoder.decodeBuffer(base64String)
println "Decoded upload data : " + decodedBytes.length
 
def uploadFile = "test.png"
println "File save path : " + uploadFile

def image = ImageIO.read(new ByteArrayInputStream(decodedBytes))
if (image == null) {
	println "Buffered Image is null"
}
def f = new File(uploadFile)
 
// write the image
ImageIO.write(image, "png", f)
